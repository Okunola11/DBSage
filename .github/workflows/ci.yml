name: CI

on:
  push:
    branches: [main, staging, dev]
    paths-ignore:
      - "README.md"
      - ".github/workflows/**"
  pull_request:
    branches: [main, staging, dev]
    paths-ignore:
      - "README.md"
      - ".github/workflows/**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: "username"
          POSTGRES_PASSWORD: "password"
          POSTGRES_DB: "test"
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Cache Poetry and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry (if not installed)
        run: |
          if ! command -v poetry &> /dev/null; then
            curl -sSL https://install.python-poetry.org | python3 -
          fi
          poetry --version

      - name: Install dependencies with Poetry
        run: poetry install

      - name: List installed packages
        run: poetry run poetry show

      - name: Copy env file
        run: cp .env.sample .env

      - name: Run app
        run: |
          poetry run python3 db_sage/main.py &
          pid=$!
          sleep 10
          if ps -p $pid > /dev/null; then
            echo "main.py started successfully"
            kill $pid
          else
            echo "main.py failed to start"
            exit 1
          fi

      - name: Run migrations
        run: |
          poetry run alembic upgrade head

      - name: Run tests
        run: |
          poetry run PYTHONPATH=. pytest
